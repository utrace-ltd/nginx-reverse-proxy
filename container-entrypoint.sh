#!/bin/bash

set -e

HEADER_TEXT="#DO NOT EDIT THIS FILE (AUTOGENERATED)"
BASE_DIR=/etc/nginx
VHOST_DIR=${BASE_DIR}/vhosts.d
HTTP_VARS_FILE=${BASE_DIR}/conf.d/http_vars.conf
SSL_DIR=${BASE_DIR}/ssl

mkdir -p ${VHOST_DIR}
rm -f ${VHOST_DIR}/*

echo "${HEADER_TEXT}" > ${VHOST_DIR}/default.conf
echo "server {listen 80; server_name _; return 404;}" >> ${VHOST_DIR}/default.conf

for VH in `env | grep "VH_"`; do
    ENV=`echo $VH | awk -F "=" '{print $1}'`
    HOST=`echo $ENV | cut -c 4-`
    HOST_SERVER_NAME=${HOST//_/.}
    HOST_BACKEND=`echo $VH | awk -F "=" '{print $2}'`

    HOST_FILE=${VHOST_DIR}/host-$HOST.conf
    HOST_INC_FILE=${VHOST_DIR}/host-$HOST.inc
    
    if [ -f "${SSL_DIR}/${HOST}.key" ] && [ -f "${SSL_DIR}/${HOST}.crt" ]; then
	   SSL_ENABLED=true
    else
	   SSL_ENABLED=false
    fi

    echo "${HEADER_TEXT}" > $HOST_FILE
    if [ "${SSL_ENABLED}" == "true" ]; then
        echo "server {listen 80; server_name $HOST_SERVER_NAME; return 301 https://\$server_name\$request_uri; }" >> $HOST_FILE

        if [ -f "$HOST_INC_FILE" ]; then
            echo "server {listen 443 ssl; server_name $HOST_SERVER_NAME; ssl_certificate ${SSL_DIR}/${HOST}.crt; ssl_certificate_key ${SSL_DIR}/${HOST}.key; include $HOST_INC_FILE; }" >> $HOST_FILE
        else
            echo "server {listen 443 ssl; server_name $HOST_SERVER_NAME; ssl_certificate ${SSL_DIR}/${HOST}.crt; ssl_certificate_key ${SSL_DIR}/${HOST}.key; location / { proxy_pass $HOST_BACKEND; } }" >> $HOST_FILE
        fi;
    else
        if [ -f "$HOST_INC_FILE" ]; then
            echo "server {listen 80; server_name $HOST_SERVER_NAME; include $HOST_INC_FILE; }" >> $HOST_FILE
        else
            echo "server {listen 80; server_name $HOST_SERVER_NAME; location / { proxy_pass $HOST_BACKEND; } }" >> $HOST_FILE
        fi;
    fi
done;

echo "${HEADER_TEXT}" > ${HTTP_VARS_FILE}
for SET_HTTP in `env | grep "SET_HTTP_"`; do
    ENV=`echo $SET_HTTP | awk -F "=" '{print $1}'`
    VALUE=`echo $SET_HTTP | awk -F "=" '{print $2}'`
    echo "${ENV:9} $VALUE;" >> ${HTTP_VARS_FILE}
done;

exec "$@"
